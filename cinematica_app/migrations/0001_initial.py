# Generated by Django 4.0.6 on 2022-07-15 00:14

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('representante', models.CharField(max_length=150)),
                ('telefono', models.CharField(max_length=10)),
                ('web', models.CharField(max_length=40)),
                ('direccion', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Ciudad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('codigo_postal', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Combo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150)),
                ('precio', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Membrecia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=10)),
                ('descuento', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Pelicula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('clasificacion', models.CharField(max_length=5)),
                ('director', models.CharField(max_length=50)),
                ('genero', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Sala',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sillas', models.IntegerField(default=0)),
                ('numero', models.CharField(max_length=1)),
                ('cine', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='cinematica_app.cine')),
            ],
        ),
        migrations.CreateModel(
            name='Silla',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ocupada', models.BooleanField(default=False)),
                ('codigo', models.CharField(max_length=3)),
                ('activa', models.BooleanField(default=True)),
                ('sala', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='cinematica_app.sala')),
            ],
        ),
        migrations.CreateModel(
            name='Proyeccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hora_inicio', models.TimeField(auto_now_add=True)),
                ('hora_fin', models.TimeField(auto_now_add=True)),
                ('pelicula', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='cinematica_app.pelicula')),
                ('sala', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='cinematica_app.sala')),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=20)),
                ('codigo', models.IntegerField(default=0)),
                ('tamanio', models.CharField(max_length=3)),
                ('precio', models.IntegerField(default=0)),
                ('cine', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='cinematica_app.cine')),
            ],
        ),
        migrations.CreateModel(
            name='FacturacionBoleta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_compra', models.DateTimeField(auto_now=True)),
                ('valor', models.IntegerField(default=0)),
                ('cantidad', models.IntegerField(default=1)),
                ('sillas', models.TextField()),
                ('proyeccion', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='cinematica_app.proyeccion')),
            ],
        ),
        migrations.CreateModel(
            name='ComboProducto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField(default=0)),
                ('combo', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='cinematica_app.combo')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='cinematica_app.producto')),
            ],
        ),
        migrations.AddField(
            model_name='cine',
            name='ciudad',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='cinematica_app.ciudad'),
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('direccion', models.CharField(max_length=100)),
                ('telefono', models.CharField(max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('membrecia', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='cinematica_app.membrecia')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
